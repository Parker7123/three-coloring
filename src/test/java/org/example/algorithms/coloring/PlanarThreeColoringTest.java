package org.example.algorithms.coloring;

import org.jgrapht.Graph;
import org.jgrapht.graph.DefaultEdge;
import org.jgrapht.graph.SimpleGraph;
import org.jgrapht.nio.graph6.Graph6Sparse6Importer;
import org.jgrapht.util.SupplierUtil;
import org.junit.jupiter.api.Test;

import java.io.StringReader;
import java.time.Instant;

class PlanarThreeColoringTest {

    @Test
    void bigGridGraphTest() {
        Graph<Integer, DefaultEdge> graph = new SimpleGraph<>(SupplierUtil.createIntegerSupplier(),
                SupplierUtil.createDefaultEdgeSupplier(), false);
        Graph6Sparse6Importer<Integer, DefaultEdge> importer = new Graph6Sparse6Importer<>();
        importer.importGraph(graph, new StringReader("u??????@?G@?A?????G@????@?????_??O?????@???C??????_??A????A?C????_????????????????????????????G????A?????@?????C??????_?????_?????@??????P??????K??????_???BC??????Y?????w?????@_????????O_?A???C@??????B???A_?@_???K??A?????[?H_??G???@W??@????"));

        var planarThreeColoring = new PlanarThreeColoring<>(graph, true);

        long start = Instant.now().toEpochMilli();
        var coloring = planarThreeColoring.getColoring();
        long end = Instant.now().toEpochMilli();
        System.out.println(end - start);
        System.out.println(coloring);
    }

}